  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>WebDesign/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js at master Â· skirov/WebDesign</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="xhr-socket" href="/_sockets">
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="5ySpXypBTQSjbUFl85aGpku6cWpw4OC42VWpZHo+j64=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-9a310fdbdbb761f960d24b9c185a3506b9d3663d.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-3f38effb52355c191d32c7d619457584b9f50394.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-010d500708696b4ecee44478b5229d626367e844.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-3a2294d0a96fa40c4e50e8b0326ef6a8f001210a.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="bba392c1068c7e96d933bc161a77540e">

        <link data-pjax-transient rel='permalink' href='/skirov/WebDesign/blob/cab0cc32637a9d0a20b398b289ede692221239f4/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js'>
    <meta property="og:title" content="WebDesign"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/skirov/WebDesign"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/966520867091835f2ce197f742368c53?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="Contribute to WebDesign development by creating an account on GitHub."/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="skirov/WebDesign"/>

    <meta name="description" content="Contribute to WebDesign development by creating an account on GitHub." />

  <link href="https://github.com/skirov/WebDesign/commits/master.atom" rel="alternate" title="Recent Commits to WebDesign:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob windows vis-public env-production  ">
    <div id="wrapper">

      

      
      
      

      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-blacktocat" href="https://github.com/">
  <span class="mega-icon mega-icon-blacktocat"></span>
</a>

    <div class="divider-vertical"></div>

      <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have no unread notifications">
    <span class="mail-status all-read"></span>
  </a>
  <div class="divider-vertical"></div>


      <div class="command-bar js-command-bar  ">
            <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search-icon tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="mini-icon mini-icon-advanced-search "></span></a>

  <input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" data-username="vladislav-karamfilov" autocapitalize="off">

  <span class="mini-icon help tooltipped downwards" title="Show command bar help">
    <span class="mini-icon mini-icon-help"></span>
  </span>

  <input type="hidden" name="ref" value="cmdform">

    <input type="hidden" class="js-repository-name-with-owner" value="skirov/WebDesign"/>
    <input type="hidden" class="js-repository-branch" value="master"/>
    <input type="hidden" class="js-repository-tree-sha" value="4b973ab7a31c5fbca820f78c01622a76ed5d08fd"/>

  <div class="divider-vertical"></div>
</form>
        <ul class="top-nav">
            <li class="explore"><a href="https://github.com/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="http://help.github.com">Help</a></li>
        </ul>
      </div>

    

  

    <ul id="user-links">
      <li>
        <a href="https://github.com/vladislav-karamfilov" class="name">
          <img height="20" src="https://secure.gravatar.com/avatar/caff20b521413be225c46a10c7b53498?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /> vladislav-karamfilov
        </a>
      </li>

        <li>
          <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo">
            <span class="mini-icon mini-icon-create"></span>
          </a>
        </li>

        <li>
          <a href="/settings/profile" id="account_settings"
            class="tooltipped downwards"
            title="Account settings ">
            <span class="mini-icon mini-icon-account-settings"></span>
          </a>
        </li>
        <li>
          <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out">
            <span class="mini-icon mini-icon-logout"></span>
          </a>
        </li>

    </ul>


<div class="js-new-dropdown-contents hidden">
  <ul class="dropdown-menu">
    <li>
      <a href="/new"><span class="mini-icon mini-icon-create"></span> New repository</a>
    </li>
    <li>
        <a href="https://github.com/skirov/WebDesign/issues/new"><span class="mini-icon mini-icon-issue-opened"></span> New issue</a>
    </li>
    <li>
    </li>
    <li>
      <a href="/organizations/new"><span class="mini-icon mini-icon-u-list"></span> New organization</a>
    </li>
  </ul>
</div>


    
  </div>
</div>

      

      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              


<ul class="pagehead-actions">


    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="5ySpXypBTQSjbUFl85aGpku6cWpw4OC42VWpZHo+j64=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="7947437" />

    <div class="select-menu js-menu-container js-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">
          <span class="mini-icon mini-icon-watching"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder js-menu-content">
        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container">

            <div class="select-menu-item js-navigation-item js-navigation-target selected">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for discussions in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-watching"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

    <li class="js-toggler-container js-social-container starring-container ">
      <a href="/skirov/WebDesign/unstar" class="minibutton js-toggler-target star-button starred upwards" title="Unstar this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-remove-star"></span>
        <span class="text">Unstar</span>
      </a>
      <a href="/skirov/WebDesign/star" class="minibutton js-toggler-target star-button unstarred upwards" title="Star this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-star"></span>
        <span class="text">Star</span>
      </a>
      <a class="social-count js-social-count" href="/skirov/WebDesign/stargazers">0</a>
    </li>

        <li>
          <a href="/skirov/WebDesign/fork" class="minibutton js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="nofollow" data-method="post">
            <span class="mini-icon mini-icon-branch-create"></span>
            <span class="text">Fork</span>
          </a>
          <a href="/skirov/WebDesign/network" class="social-count">4</a>
        </li>


</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/skirov" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">skirov</span>
                  </a></span> /
                <strong><a href="/skirov/WebDesign" class="js-current-repository">WebDesign</a></strong>
              </h1>
            </div>

            
  <ul class="tabs">
    <li><a href="/skirov/WebDesign" class="selected" highlight="repo_source repo_downloads repo_commits repo_tags repo_branches">Code</a></li>
    <li><a href="/skirov/WebDesign/network" highlight="repo_network">Network</a></li>
    <li><a href="/skirov/WebDesign/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/skirov/WebDesign/issues" highlight="repo_issues">Issues <span class='counter'>0</span></a></li>

      <li><a href="/skirov/WebDesign/wiki" highlight="repo_wiki">Wiki</a></li>


    <li><a href="/skirov/WebDesign/graphs" highlight="repo_graphs repo_contributors">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/skirov/WebDesign/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter blank">0</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item js-navigation-target selected">
                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                  <a href="/skirov/WebDesign/blob/master/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <div class="select-menu-no-results">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/skirov/WebDesign" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/skirov/WebDesign/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/skirov/WebDesign/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:1ef3a8ba795c18351b64ce00a16686de -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:1ef3a8ba795c18351b64ce00a16686de -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/skirov/WebDesign" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">WebDesign</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/skirov/WebDesign/tree/master/SliceAndDice" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">SliceAndDice</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/skirov/WebDesign/tree/master/SliceAndDice/04.HTML5-Everywhere" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">04.HTML5-Everywhere</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/skirov/WebDesign/tree/master/SliceAndDice/04.HTML5-Everywhere/03.Inputs" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">03.Inputs</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/skirov/WebDesign/tree/master/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">shims</span></a></span><span class="separator"> / </span><strong class="final-path">fd-slider.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
        </div>

      <a href="/skirov/WebDesign/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/966520867091835f2ce197f742368c53?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/skirov" rel="author">skirov</a></span>
    <time class="js-relative-date" datetime="2013-04-11T11:44:08-07:00" title="2013-04-11 11:44:08">April 11, 2013</time>
    <div class="commit-title">
        <a href="/skirov/WebDesign/commit/844b9dddfbd9b5f1fac32e4e573eb9c881dcb7dd" class="message">upload task 3 in HTML5 Everywhere</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/966520867091835f2ce197f742368c53?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/skirov">skirov</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/skirov/WebDesign/blob/cab0cc32637a9d0a20b398b289ede692221239f4/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js" data-title="WebDesign/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js at master Â· skirov/WebDesign Â· GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>26 lines (26 sloc)</span>
                <span>26.295 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                        <a class="minibutton tooltipped leftwards"
                           title="Clicking this button will automatically fork this project so you can edit the file"
                           href="/skirov/WebDesign/edit/master/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js"
                           data-method="post" rel="nofollow">Edit</a>
                  <a href="/skirov/WebDesign/raw/master/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/skirov/WebDesign/blame/master/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js" class="button minibutton ">Blame</a>
                  <a href="/skirov/WebDesign/commits/master/SliceAndDice/04.HTML5-Everywhere/03.Inputs/shims/fd-slider.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-blob">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*! Unobtrusive Slider Control / HTML5 Input Range polyfill - MIT/GPL2 @freqdec */</span></div><div class='line' id='LC2'><span class="kd">var</span> <span class="nx">fdSlider</span><span class="o">=</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">sliders</span><span class="o">=</span><span class="p">{},</span><span class="nx">uniqueid</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">mouseWheelEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">fullARIA</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">describedBy</span><span class="o">=</span><span class="s2">&quot;fd-slider-describedby&quot;</span><span class="p">,</span><span class="nx">varSetRules</span><span class="o">=</span><span class="p">{</span><span class="nx">onfocus</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">onvalue</span><span class="o">:</span><span class="kc">true</span><span class="p">},</span><span class="nx">noRangeBar</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">html5Animation</span><span class="o">=</span><span class="s2">&quot;jump&quot;</span><span class="p">,</span><span class="nx">isOpera</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">opera</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Opera]&quot;</span><span class="p">,</span><span class="nx">fpRegExp</span><span class="o">=</span><span class="sr">/^([-]{0,1}[0-9]+(\.[0-9]+){0,1})$/</span><span class="p">,</span><span class="nx">stepRegExp</span><span class="o">=</span><span class="sr">/^([0-9]+(\.[0-9]+){0,1})$/</span><span class="p">;</span><span class="kd">var</span> <span class="nx">parseJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">str</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">str</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="o">||</span><span class="nx">str</span><span class="o">==</span><span class="s2">&quot;&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{}}</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">JSON</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">str</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="sr">/mousewheelenabled|fullaria|describedby|norangebar|html5animation|varsetrules/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">str</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nb">Function</span><span class="p">([</span><span class="s2">&quot;var document,top,self,window,parent,Number,Date,Object,Function,&quot;</span><span class="p">,</span><span class="s2">&quot;Array,String,Math,RegExp,Image,ActiveXObject;&quot;</span><span class="p">,</span><span class="s2">&quot;return (&quot;</span><span class="p">,</span><span class="nx">str</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;\!--.+--&gt;/gim</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\bfunction\b/g</span><span class="p">,</span><span class="s2">&quot;function-&quot;</span><span class="p">),</span><span class="s2">&quot;);&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">f</span><span class="p">()}}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){}</span><span class="k">return</span><span class="p">{</span><span class="nx">err</span><span class="o">:</span><span class="s2">&quot;Could not parse the JSON object&quot;</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">affectJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">json</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">json</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">key</span> <span class="k">in</span> <span class="nx">json</span><span class="p">){</span><span class="nx">value</span><span class="o">=</span><span class="nx">json</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="nx">key</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">case</span><span class="s2">&quot;mousewheelenabled&quot;</span><span class="o">:</span><span class="nx">mouseWheelEnabled</span><span class="o">=!!</span><span class="nx">value</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;fullaria&quot;</span><span class="o">:</span><span class="nx">fullARIA</span><span class="o">=!!</span><span class="nx">value</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;describedby&quot;</span><span class="o">:</span><span class="nx">describedBy</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;norangebar&quot;</span><span class="o">:</span><span class="nx">noRangeBar</span><span class="o">=!!</span><span class="nx">value</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;html5animation&quot;</span><span class="o">:</span><span class="nx">html5Animation</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">value</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="sr">/^(jump|tween|timed)$/i</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?</span><span class="nb">String</span><span class="p">(</span><span class="nx">value</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;jump&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;varsetrules&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;onfocus&quot;</span> <span class="k">in</span> <span class="nx">value</span><span class="p">){</span><span class="nx">varSetRules</span><span class="p">.</span><span class="nx">onfocus</span><span class="o">=!!</span><span class="nx">value</span><span class="p">.</span><span class="nx">onfocus</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;onvalue&quot;</span> <span class="k">in</span> <span class="nx">value</span><span class="p">){</span><span class="nx">varSetRules</span><span class="p">.</span><span class="nx">onvalue</span><span class="o">=!!</span><span class="nx">value</span><span class="p">.</span><span class="nx">onvalue</span><span class="p">}</span><span class="k">break</span><span class="p">}}};</span><span class="kd">var</span> <span class="nx">addEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span><span class="nx">type</span><span class="p">,</span><span class="nx">fn</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">){</span><span class="nx">obj</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">type</span><span class="p">,</span><span class="nx">fn</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">type</span><span class="p">,</span><span class="nx">fn</span><span class="p">,</span><span class="kc">true</span><span class="p">)}};</span><span class="kd">var</span> <span class="nx">removeEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span><span class="nx">type</span><span class="p">,</span><span class="nx">fn</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">){</span><span class="nx">obj</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">type</span><span class="p">,</span><span class="nx">fn</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">type</span><span class="p">,</span><span class="nx">fn</span><span class="p">,</span><span class="kc">true</span><span class="p">)}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span><span class="p">){}};</span><span class="kd">var</span> <span class="nx">stopEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()}</span></div><div class='line' id='LC3'><span class="cm">/*@cc_on@*/</span></div><div class='line' id='LC4'><span class="cm">/*@if(@_win32)</span></div><div class='line' id='LC5'><span class="cm">                e.cancelBubble = true;</span></div><div class='line' id='LC6'><span class="cm">                e.returnValue = false;</span></div><div class='line' id='LC7'><span class="cm">                /*@end@*/</span></div><div class='line' id='LC8'><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="kd">var</span> <span class="nx">preventDefault</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">return</span><span class="p">}</span><span class="nx">e</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=</span><span class="kc">false</span><span class="p">};</span><span class="kd">var</span> <span class="nx">addClass</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\s)&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;(\\s|$)&quot;</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="p">)){</span><span class="k">return</span><span class="p">}</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">?</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="p">};</span><span class="kd">var</span> <span class="nx">removeClass</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">=!</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\s)&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;(\\s|$)&quot;</span><span class="p">),</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s\s*/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s\s*$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">getValueSet</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">obj</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">id</span> <span class="k">in</span> <span class="nx">sliders</span><span class="p">){</span><span class="nx">obj</span><span class="p">[</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">getValueSet</span><span class="p">()}</span><span class="k">return</span> <span class="nx">obj</span><span class="p">};</span><span class="kd">var</span> <span class="nx">setValueSet</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">sliderId</span><span class="p">,</span><span class="nx">tf</span><span class="p">){</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">sliderId</span><span class="p">].</span><span class="nx">setValueSet</span><span class="p">(</span><span class="o">!!</span><span class="nx">tf</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">sliderExists</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">slider</span><span class="p">){</span><span class="k">return</span> <span class="o">!!</span><span class="p">(</span><span class="nx">slider</span> <span class="k">in</span> <span class="nx">sliders</span><span class="o">&amp;&amp;</span><span class="nx">sliders</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">slider</span><span class="p">))};</span><span class="kd">var</span> <span class="nx">createSlider</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">options</span><span class="o">||!</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="o">||!</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">tagName</span><span class="o">||</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="sr">/^input|select/i</span><span class="p">)</span><span class="o">==-</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">options</span><span class="p">.</span><span class="nx">html5Shim</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">precision</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">forceValue</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">type</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="sr">/^(text|range)$/i</span><span class="p">)</span><span class="o">==-</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="nx">fpRegExp</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?+</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="nx">fpRegExp</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?+</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="o">:</span><span class="mi">100</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="o">&amp;&amp;</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="nx">stepRegExp</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">precision</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">precision</span><span class="o">&amp;&amp;</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">precision</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="sr">/^[0-9]+$/</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?</span><span class="nx">options</span><span class="p">.</span><span class="nx">precision</span><span class="o">:</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="sr">/\.([0-9]+)$/</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\.([0-9]+)$/</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="nx">options</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">scale</span><span class="o">||</span><span class="kc">false</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">forceValue</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;forceValue&quot;</span> <span class="k">in</span> <span class="nx">options</span><span class="p">)</span><span class="o">?!!</span><span class="nx">options</span><span class="p">.</span><span class="nx">forceValue</span><span class="o">:</span><span class="kc">false</span><span class="p">}</span><span class="nx">options</span><span class="p">.</span><span class="nx">ariaFormat</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;ariaFormat&quot;</span> <span class="k">in</span> <span class="nx">options</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">options</span><span class="p">.</span><span class="nx">ariaFormat</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">options</span><span class="p">.</span><span class="nx">ariaFormat</span><span class="o">:</span><span class="kc">false</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxStep</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxStep</span><span class="o">&amp;&amp;</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxStep</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="nx">stepRegExp</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?+</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxStep</span><span class="o">:+</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">classNames</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">classNames</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">callbacks</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">callbacks</span><span class="o">||</span><span class="kc">false</span><span class="p">;</span><span class="nx">destroySingleSlider</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">fdRange</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="kd">var</span> <span class="nx">getAttribute</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">elem</span><span class="p">,</span><span class="nx">att</span><span class="p">){</span><span class="k">return</span> <span class="nx">elem</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">att</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="kd">var</span> <span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">inputs</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">),</span><span class="nx">options</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">inp</span><span class="p">;</span><span class="nx">inp</span><span class="o">=</span><span class="nx">inputs</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">&amp;&amp;</span><span class="nx">inp</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;text&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;min&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;min&quot;</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="nx">fpRegExp</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">||</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;max&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;max&quot;</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="nx">fpRegExp</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">||</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;step&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;step&quot;</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="sr">/^(any|([0-9]+(\.[0-9]+){0,1}))$/i</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;fd-slider-&quot;</span><span class="o">+</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">)){</span><span class="k">continue</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="o">&amp;&amp;!</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;fd-slider-&quot;</span><span class="o">+</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">)){</span><span class="nx">destroySingleSlider</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">){</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;fd-slider-form-elem-&quot;</span><span class="o">+</span><span class="nx">uniqueid</span><span class="o">++</span><span class="p">}</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="nx">inp</span><span class="o">:</span><span class="nx">inp</span><span class="p">,</span><span class="nx">callbacks</span><span class="o">:</span><span class="p">[],</span><span class="nx">animation</span><span class="o">:</span><span class="nx">html5Animation</span><span class="p">,</span><span class="nx">vertical</span><span class="o">:</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;data-fd-slider-vertical&quot;</span><span class="p">)</span><span class="o">?</span><span class="kc">true</span><span class="o">:!!</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">&gt;</span><span class="nx">inp</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">),</span><span class="nx">classNames</span><span class="o">:</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;data-fd-slider-vertical&quot;</span><span class="p">),</span><span class="nx">html5Shim</span><span class="o">:</span><span class="kc">true</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">vertical</span><span class="o">&amp;&amp;!</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;data-fd-slider-vertical&quot;</span><span class="p">)){</span><span class="nx">options</span><span class="p">.</span><span class="nx">inpHeight</span><span class="o">=</span><span class="nx">inp</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">}</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;min&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;max&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">100</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="o">=</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;step&quot;</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="sr">/^any$/i</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="o">-</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="o">:</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;step&quot;</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="nx">stepRegExp</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;step&quot;</span><span class="p">)</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">precision</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">).</span><span class="nx">search</span><span class="p">(</span><span class="sr">/\.([0-9]+)$/</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="o">?</span><span class="nb">String</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\.([0-9]+)$/</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxStep</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span><span class="nx">destroySingleSlider</span><span class="p">(</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">fdRange</span><span class="p">(</span><span class="nx">options</span><span class="p">)}}</span><span class="k">return</span> <span class="kc">true</span><span class="p">};</span><span class="kd">var</span> <span class="nx">destroySingleSlider</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">id</span> <span class="k">in</span> <span class="nx">sliders</span><span class="o">&amp;&amp;</span><span class="nx">sliders</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">destroy</span><span class="p">();</span><span class="k">delete</span> <span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">];</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="k">return</span> <span class="kc">false</span><span class="p">};</span><span class="kd">var</span> <span class="nx">destroyAllsliders</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">slider</span> <span class="k">in</span> <span class="nx">sliders</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">sliders</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">slider</span><span class="p">)){</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">slider</span><span class="p">].</span><span class="nx">destroy</span><span class="p">()}}</span><span class="nx">sliders</span><span class="o">=</span><span class="p">[]};</span><span class="kd">var</span> <span class="nx">unload</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">destroyAllsliders</span><span class="p">();</span><span class="nx">sliders</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="kd">var</span> <span class="nx">resize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">slider</span> <span class="k">in</span> <span class="nx">sliders</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">sliders</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">slider</span><span class="p">)){</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">slider</span><span class="p">].</span><span class="nx">onResize</span><span class="p">()}}};</span><span class="kd">var</span> <span class="nx">onDomReady</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">init</span><span class="p">);</span><span class="nx">init</span><span class="p">()};</span><span class="kd">var</span> <span class="nx">removeOnLoadEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">init</span><span class="p">)};</span><span class="kd">function</span> <span class="nx">fdRange</span><span class="p">(</span><span class="nx">options</span><span class="p">){</span><span class="kd">var</span> <span class="nx">inp</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">inp</span><span class="p">,</span><span class="nx">disabled</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">tagName</span><span class="o">=</span><span class="nx">inp</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">min</span><span class="o">=+</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">max</span><span class="o">=+</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">rMin</span><span class="o">=+</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">rMax</span><span class="o">=+</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">range</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">max</span><span class="o">-</span><span class="nx">min</span><span class="p">),</span><span class="nx">step</span><span class="o">=</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="mi">1</span><span class="o">:+</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">,</span><span class="nx">maxStep</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxStep</span><span class="o">?+</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxStep</span><span class="o">:</span><span class="nx">step</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="nx">precision</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">precision</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">steps</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">range</span><span class="o">/</span><span class="nx">step</span><span class="p">),</span><span class="nx">scale</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">scale</span><span class="o">||</span><span class="kc">false</span><span class="p">,</span><span class="nx">hideInput</span><span class="o">=!!</span><span class="nx">options</span><span class="p">.</span><span class="nx">hideInput</span><span class="p">,</span><span class="nx">animation</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">animation</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">vertical</span><span class="o">=!!</span><span class="nx">options</span><span class="p">.</span><span class="nx">vertical</span><span class="p">,</span><span class="nx">callbacks</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">callbacks</span><span class="o">||</span><span class="p">{},</span><span class="nx">classNames</span><span class="o">=</span><span class="nx">options</span><span class="p">.</span><span class="nx">classNames</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">html5Shim</span><span class="o">=!!</span><span class="nx">options</span><span class="p">.</span><span class="nx">html5Shim</span><span class="p">,</span><span class="nx">defaultVal</span><span class="o">=</span><span class="nx">max</span><span class="o">&lt;</span><span class="nx">min</span><span class="o">?</span><span class="nx">min</span><span class="o">:</span><span class="nx">min</span><span class="o">+</span><span class="p">((</span><span class="nx">max</span><span class="o">-</span><span class="nx">min</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">resetDef</span><span class="o">=</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">defaultValue</span><span class="o">||</span><span class="nx">defaultVal</span><span class="p">,</span><span class="nx">forceValue</span><span class="o">=</span><span class="nx">html5Shim</span><span class="o">||!!</span><span class="nx">options</span><span class="p">.</span><span class="nx">forceValue</span><span class="p">,</span><span class="nx">inpHeight</span><span class="o">=</span><span class="nx">html5Shim</span><span class="o">&amp;&amp;</span><span class="nx">vertical</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;inpHeight&quot;</span> <span class="k">in</span> <span class="nx">options</span><span class="p">)</span><span class="o">?</span><span class="nx">options</span><span class="p">.</span><span class="nx">inpHeight</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">ariaFormat</span><span class="o">=!</span><span class="nx">html5Shim</span><span class="o">&amp;&amp;</span><span class="nx">options</span><span class="p">.</span><span class="nx">ariaFormat</span><span class="o">?</span><span class="nx">options</span><span class="p">.</span><span class="nx">ariaFormat</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">timer</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">kbEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">initialVal</span><span class="o">=</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">sliderH</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">sliderW</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">tweenX</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">tweenB</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">tweenC</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">tweenD</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">frame</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">rMaxPx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">rMinPx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">handlePos</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">destPos</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">mousePos</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">stepPx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">touchEvents</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="nx">ieBlur</span><span class="p">,</span><span class="nx">handle</span><span class="p">,</span><span class="nx">rangeBar</span><span class="p">,</span><span class="nx">bar</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">&amp;&amp;</span><span class="nx">forceValue</span><span class="o">&amp;&amp;!</span><span class="nx">inp</span><span class="p">.</span><span class="nx">defaultValue</span><span class="p">){</span><span class="nx">inp</span><span class="p">.</span><span class="nx">defaultValue</span><span class="o">=</span><span class="nx">getWorkingValueFromInput</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">max</span><span class="o">&lt;</span><span class="nx">min</span><span class="p">){</span><span class="nx">step</span><span class="o">=-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">step</span><span class="p">);</span><span class="nx">maxStep</span><span class="o">=-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">maxStep</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">scale</span><span class="p">){</span><span class="nx">scale</span><span class="p">[</span><span class="mi">100</span><span class="p">]</span><span class="o">=</span><span class="nx">max</span><span class="p">}</span><span class="kd">function</span> <span class="nx">valueSet</span><span class="p">(</span><span class="nx">tf</span><span class="p">){</span><span class="nx">tf</span><span class="o">=!!</span><span class="nx">tf</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">tf</span><span class="o">!=</span><span class="nx">userSet</span><span class="p">){</span><span class="nx">userSet</span><span class="o">=</span><span class="nx">tf</span><span class="p">;</span><span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">getWorkingValueFromInput</span><span class="p">())}}</span><span class="kd">function</span> <span class="nx">disableSlider</span><span class="p">(</span><span class="nx">noCallback</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">disabled</span><span class="o">&amp;&amp;!</span><span class="nx">noCallback</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">try</span><span class="p">{</span><span class="nx">setTabIndex</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="nx">onFocus</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="nx">onBlur</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">isOpera</span><span class="p">){</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="nx">onKeyDown</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;keypress&quot;</span><span class="p">,</span><span class="nx">onKeyPress</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;keypress&quot;</span><span class="p">,</span><span class="nx">onKeyDown</span><span class="p">)}</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">onMouseOver</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">onMouseOut</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="nx">onMouseDown</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="nx">onMouseDown</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">mouseWheelEnabled</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">&amp;&amp;!</span><span class="nb">window</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;DOMMouseScroll&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">,</span><span class="kc">false</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;mousewheel&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;mousewheel&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">)}}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span><span class="p">){}</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-focused&quot;</span><span class="p">);</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-active&quot;</span><span class="p">);</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-disabled&quot;</span><span class="p">);</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-disabled&quot;</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">inp</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=</span><span class="nx">disabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timer</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">noCallback</span><span class="p">){</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;disable&quot;</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">enableSlider</span><span class="p">(</span><span class="nx">noCallback</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">disabled</span><span class="o">&amp;&amp;!</span><span class="nx">noCallback</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">setTabIndex</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="nx">onFocus</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="nx">onBlur</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">isOpera</span><span class="p">){</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="nx">onKeyDown</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;keypress&quot;</span><span class="p">,</span><span class="nx">onKeyPress</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;keypress&quot;</span><span class="p">,</span><span class="nx">onKeyDown</span><span class="p">)}</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="nx">onMouseDown</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="nx">onMouseDown</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">onMouseOver</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">onMouseOut</span><span class="p">);</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-disabled&quot;</span><span class="p">);</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-disabled&quot;</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">inp</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=</span><span class="nx">disabled</span><span class="o">=</span><span class="nx">touchEvents</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">noCallback</span><span class="p">){</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;enable&quot;</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">destroySlider</span><span class="p">(){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timer</span><span class="p">);</span><span class="nx">ieBlur</span><span class="o">=</span><span class="nx">bar</span><span class="o">=</span><span class="nx">handle</span><span class="o">=</span><span class="nx">outerWrapper</span><span class="o">=</span><span class="nx">innerWrapper</span><span class="o">=</span><span class="nx">timer</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">);</span><span class="nx">callbacks</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">redraw</span><span class="p">(){</span><span class="nx">locate</span><span class="p">();</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">sW</span><span class="o">=</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">sH</span><span class="o">=</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">hW</span><span class="o">=</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">hH</span><span class="o">=</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">bH</span><span class="o">=</span><span class="nx">bar</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">bW</span><span class="o">=</span><span class="nx">bar</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">mPx</span><span class="o">=</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">sH</span><span class="o">-</span><span class="nx">hH</span><span class="o">:</span><span class="nx">sW</span><span class="o">-</span><span class="nx">hW</span><span class="p">;</span><span class="nx">stepPx</span><span class="o">=</span><span class="nx">mPx</span><span class="o">/</span><span class="nx">steps</span><span class="p">;</span><span class="nx">rMinPx</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">scale</span><span class="o">?</span><span class="nx">percentToPixels</span><span class="p">(</span><span class="nx">valueToPercent</span><span class="p">(</span><span class="nx">rMin</span><span class="p">))</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">((</span><span class="nx">rMin</span><span class="o">-</span><span class="nx">min</span><span class="p">)</span><span class="o">/</span><span class="nx">step</span><span class="p">)</span><span class="o">*</span><span class="nx">stepPx</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">rMaxPx</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">scale</span><span class="o">?</span><span class="nx">percentToPixels</span><span class="p">(</span><span class="nx">valueToPercent</span><span class="p">(</span><span class="nx">rMax</span><span class="p">))</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">((</span><span class="nx">rMax</span><span class="o">-</span><span class="nx">min</span><span class="p">)</span><span class="o">/</span><span class="nx">step</span><span class="p">)</span><span class="o">*</span><span class="nx">stepPx</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">sH</span><span class="o">-</span><span class="nx">hH</span><span class="o">:</span><span class="nx">sW</span><span class="o">-</span><span class="nx">hW</span><span class="p">));</span><span class="nx">sliderW</span><span class="o">=</span><span class="nx">sW</span><span class="p">;</span><span class="nx">sliderH</span><span class="o">=</span><span class="nx">sH</span><span class="p">;</span><span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">forceValue</span><span class="o">?</span><span class="nx">getWorkingValueFromInput</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">)))}</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span><span class="p">){}</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;redraw&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">type</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">html5Shim</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">callbacks</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">type</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">cbObj</span><span class="o">=</span><span class="p">{</span><span class="nx">userSet</span><span class="o">:</span><span class="nx">userSet</span><span class="p">,</span><span class="nx">disabled</span><span class="o">:</span><span class="nx">disabled</span><span class="p">,</span><span class="nx">elem</span><span class="o">:</span><span class="nx">inp</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">].</span><span class="nx">value</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">func</span><span class="p">;</span><span class="nx">func</span><span class="o">=</span><span class="nx">callbacks</span><span class="p">[</span><span class="nx">type</span><span class="p">][</span><span class="nx">i</span><span class="p">];</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">func</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="nx">cbObj</span><span class="p">)}}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">type</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(blur|focus|change)$/i</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEventObject</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEventObject</span><span class="p">();</span><span class="nx">inp</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">e</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span><span class="p">){}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;HTMLEvents&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">initEvent</span><span class="p">(</span><span class="nx">type</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">inp</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}}}}</span><span class="kd">function</span> <span class="nx">onFocus</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-focused&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">varSetRules</span><span class="p">.</span><span class="nx">onfocus</span><span class="p">){</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">getWorkingValueFromInput</span><span class="p">())}</span><span class="k">if</span><span class="p">(</span><span class="nx">mouseWheelEnabled</span><span class="p">){</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;DOMMouseScroll&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;mousewheel&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">isOpera</span><span class="p">){</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;mousewheel&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">)}}</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;focus&quot;</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">onBlur</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-focused&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">mouseWheelEnabled</span><span class="p">){</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;mousewheel&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;DOMMouseScroll&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">isOpera</span><span class="p">){</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;mousewheel&quot;</span><span class="p">,</span><span class="nx">trackMouseWheel</span><span class="p">)}}</span><span class="nx">kbEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">trackMouseWheel</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">kbEnabled</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="kd">var</span> <span class="nx">delta</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">value</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">wheelDelta</span><span class="p">){</span><span class="nx">delta</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">wheelDelta</span><span class="o">/</span><span class="mi">120</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">isOpera</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">opera</span><span class="p">.</span><span class="nx">version</span><span class="p">()</span><span class="o">&lt;</span><span class="mf">9.2</span><span class="p">){</span><span class="nx">delta</span><span class="o">=-</span><span class="nx">delta</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">detail</span><span class="p">){</span><span class="nx">delta</span><span class="o">=-</span><span class="nx">e</span><span class="p">.</span><span class="nx">detail</span><span class="o">/</span><span class="mi">3</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">vertical</span><span class="p">){</span><span class="nx">delta</span><span class="o">=-</span><span class="nx">delta</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">delta</span><span class="p">){</span><span class="nx">value</span><span class="o">=</span><span class="nx">getWorkingValueFromInput</span><span class="p">();</span><span class="nx">value</span><span class="o">+=</span><span class="p">(</span><span class="nx">delta</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="o">?-</span><span class="nx">step</span><span class="o">:</span><span class="nx">step</span><span class="p">;</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">getValidValue</span><span class="p">(</span><span class="nx">value</span><span class="p">))}</span><span class="k">return</span> <span class="nx">stopEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">onKeyPress</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">&gt;=</span><span class="mi">33</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">&lt;=</span><span class="mi">40</span><span class="p">)</span><span class="o">||!</span><span class="nx">kbEnabled</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="mi">45</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">==</span><span class="mi">46</span><span class="p">){</span><span class="k">return</span> <span class="nx">stopEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">onKeyDown</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">kbEnabled</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="kd">var</span> <span class="nx">kc</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">!=</span><span class="kc">null</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">charCode</span><span class="p">,</span><span class="nx">value</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">kc</span><span class="o">&lt;</span><span class="mi">33</span><span class="o">||</span><span class="p">(</span><span class="nx">kc</span><span class="o">&gt;</span><span class="mi">40</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">kc</span><span class="o">!=</span><span class="mi">45</span><span class="o">&amp;&amp;</span><span class="nx">kc</span><span class="o">!=</span><span class="mi">46</span><span class="p">))){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="nx">value</span><span class="o">=</span><span class="nx">getWorkingValueFromInput</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">kc</span><span class="o">==</span><span class="mi">37</span><span class="o">||</span><span class="nx">kc</span><span class="o">==</span><span class="mi">40</span><span class="o">||</span><span class="nx">kc</span><span class="o">==</span><span class="mi">46</span><span class="o">||</span><span class="nx">kc</span><span class="o">==</span><span class="mi">34</span><span class="p">){</span><span class="nx">value</span><span class="o">-=</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">||</span><span class="nx">kc</span><span class="o">==</span><span class="mi">34</span><span class="o">?+</span><span class="nx">maxStep</span><span class="o">:+</span><span class="nx">step</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">kc</span><span class="o">==</span><span class="mi">39</span><span class="o">||</span><span class="nx">kc</span><span class="o">==</span><span class="mi">38</span><span class="o">||</span><span class="nx">kc</span><span class="o">==</span><span class="mi">45</span><span class="o">||</span><span class="nx">kc</span><span class="o">==</span><span class="mi">33</span><span class="p">){</span><span class="nx">value</span><span class="o">+=</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">||</span><span class="nx">kc</span><span class="o">==</span><span class="mi">33</span><span class="o">?+</span><span class="nx">maxStep</span><span class="o">:+</span><span class="nx">step</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">kc</span><span class="o">==</span><span class="mi">35</span><span class="p">){</span><span class="nx">value</span><span class="o">=</span><span class="nx">rMax</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">kc</span><span class="o">==</span><span class="mi">36</span><span class="p">){</span><span class="nx">value</span><span class="o">=</span><span class="nx">rMin</span><span class="p">}}}}</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">getValidValue</span><span class="p">(</span><span class="nx">value</span><span class="p">));</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;update&quot;</span><span class="p">);</span><span class="nx">preventDefault</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">onMouseOver</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-hover&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">onMouseOut</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-hover&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">onMouseDown</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">preventDefault</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">targ</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">){</span><span class="nx">targ</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">){</span><span class="nx">targ</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">targ</span><span class="o">&amp;&amp;</span><span class="nx">targ</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">3</span><span class="p">){</span><span class="nx">targ</span><span class="o">=</span><span class="nx">targ</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">touches</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">touches</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">touchEvents</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timer</span><span class="p">);</span><span class="nx">timer</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">kbEnabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">targ</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s2">&quot;fd-slider-handle&quot;</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="p">){</span><span class="nx">mousePos</span><span class="o">=</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientY</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientX</span><span class="p">;</span><span class="nx">handlePos</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">:</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">trackMouse</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">touchEvents</span><span class="p">){</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="nx">trackMouse</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">stopDrag</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="nx">trackMouse</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="nx">stopDrag</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="nx">onMouseDown</span><span class="p">)}</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-active&quot;</span><span class="p">);</span><span class="nx">addClass</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="s2">&quot;fd-slider-drag-&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">vertical</span><span class="o">?</span><span class="s2">&quot;vertical&quot;</span><span class="o">:</span><span class="s2">&quot;horizontal&quot;</span><span class="p">));</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;dragstart&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">locate</span><span class="p">();</span><span class="kd">var</span> <span class="nx">posx</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageX</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageY</span><span class="p">){</span><span class="nx">posx</span><span class="o">=</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageY</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageX</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientX</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientY</span><span class="p">){</span><span class="nx">posx</span><span class="o">=</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientY</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientX</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">+</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">}}</span><span class="nx">posx</span><span class="o">-=</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">y</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="nx">x</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="nx">posx</span><span class="o">=</span><span class="nx">snapToPxValue</span><span class="p">(</span><span class="nx">posx</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">animation</span><span class="o">==</span><span class="s2">&quot;tween&quot;</span><span class="p">){</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-active&quot;</span><span class="p">);</span><span class="nx">tweenTo</span><span class="p">(</span><span class="nx">posx</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">animation</span><span class="o">==</span><span class="s2">&quot;timed&quot;</span><span class="p">){</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-active&quot;</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="nx">touchEvents</span><span class="o">?</span><span class="s2">&quot;touchend&quot;</span><span class="o">:</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">onDocMouseUp</span><span class="p">);</span><span class="nx">destPos</span><span class="o">=</span><span class="nx">posx</span><span class="p">;</span><span class="nx">onTimer</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="nx">pixelsToValue</span><span class="p">(</span><span class="nx">posx</span><span class="p">)}}}</span><span class="k">return</span> <span class="nx">stopEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">onDocMouseUp</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">preventDefault</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="nx">touchEvents</span><span class="o">?</span><span class="s2">&quot;touchend&quot;</span><span class="o">:</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">onDocMouseUp</span><span class="p">);</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-active&quot;</span><span class="p">);</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timer</span><span class="p">);</span><span class="nx">timer</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">kbEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="nx">stopEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">stopDrag</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">preventDefault</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">touchEvents</span><span class="p">){</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="nx">trackMouse</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="nx">stopDrag</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="nx">trackMouse</span><span class="p">);</span><span class="nx">removeEvent</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">stopDrag</span><span class="p">)}</span><span class="nx">kbEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">removeClass</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="s2">&quot;fd-slider-drag-&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">vertical</span><span class="o">?</span><span class="s2">&quot;vertical&quot;</span><span class="o">:</span><span class="s2">&quot;horizontal&quot;</span><span class="p">));</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-active&quot;</span><span class="p">);</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;dragend&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">stopEvent</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">trackMouse</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">preventDefault</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">touches</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">touches</span><span class="p">[</span><span class="mi">0</span><span class="p">]}</span><span class="nx">pixelsToValue</span><span class="p">(</span><span class="nx">snapToPxValue</span><span class="p">(</span><span class="nx">handlePos</span><span class="o">+</span><span class="p">(</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientY</span><span class="o">-</span><span class="nx">mousePos</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientX</span><span class="o">-</span><span class="nx">mousePos</span><span class="p">)));</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">increment</span><span class="p">(</span><span class="nx">inc</span><span class="p">){</span><span class="kd">var</span> <span class="nx">value</span><span class="o">=</span><span class="nx">getWorkingValueFromInput</span><span class="p">();</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">value</span><span class="o">+=</span><span class="nx">inc</span><span class="o">*</span><span class="nx">step</span><span class="p">;</span><span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">getValidValue</span><span class="p">(</span><span class="nx">value</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">locate</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">curleft</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">curtop</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">obj</span><span class="o">=</span><span class="nx">outerWrapper</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">while</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">){</span><span class="nx">curleft</span><span class="o">+=</span><span class="nx">obj</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="nx">curtop</span><span class="o">+=</span><span class="nx">obj</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">;</span><span class="nx">obj</span><span class="o">=</span><span class="nx">obj</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span><span class="p">){}</span><span class="nx">x</span><span class="o">=</span><span class="nx">curleft</span><span class="p">;</span><span class="nx">y</span><span class="o">=</span><span class="nx">curtop</span><span class="p">}</span><span class="kd">function</span> <span class="nx">onTimer</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">xtmp</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">:</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="nx">xtmp</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">((</span><span class="nx">destPos</span><span class="o">&lt;</span><span class="nx">xtmp</span><span class="p">)</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">destPos</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">xtmp</span><span class="o">-</span><span class="nx">stepPx</span><span class="p">))</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">destPos</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">xtmp</span><span class="o">+</span><span class="nx">stepPx</span><span class="p">)));</span><span class="nx">pixelsToValue</span><span class="p">(</span><span class="nx">snapToPxValue</span><span class="p">(</span><span class="nx">xtmp</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">xtmp</span><span class="o">!=</span><span class="nx">destPos</span><span class="p">){</span><span class="nx">timer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">onTimer</span><span class="p">,</span><span class="nx">steps</span><span class="o">&gt;</span><span class="mi">20</span><span class="o">?</span><span class="mi">50</span><span class="o">:</span><span class="mi">100</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">kbEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-active&quot;</span><span class="p">);</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;finalise&quot;</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">tween</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">frame</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">tweenC</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">frame</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">tweenB</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">((</span><span class="nx">t</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="o">:</span><span class="nx">c</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">10</span><span class="o">*</span><span class="nx">t</span><span class="o">/</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="nx">pixelsToValue</span><span class="p">(</span><span class="nx">t</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">tweenX</span><span class="o">:</span><span class="nx">x</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">!=</span><span class="nx">d</span><span class="p">){</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;move&quot;</span><span class="p">);</span><span class="nx">timer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">tween</span><span class="p">,</span><span class="mi">20</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timer</span><span class="p">);</span><span class="nx">timer</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">kbEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-focused&quot;</span><span class="p">);</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-active&quot;</span><span class="p">);</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;finalise&quot;</span><span class="p">)}};</span><span class="kd">function</span> <span class="nx">tweenTo</span><span class="p">(</span><span class="nx">tx</span><span class="p">){</span><span class="nx">kbEnabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">tweenX</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">tx</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="nx">tweenB</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">:</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="nx">tweenC</span><span class="o">=</span><span class="nx">tweenX</span><span class="o">-</span><span class="nx">tweenB</span><span class="p">;</span><span class="nx">tweenD</span><span class="o">=</span><span class="mi">20</span><span class="p">;</span><span class="nx">frame</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">timer</span><span class="p">){</span><span class="nx">timer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">tween</span><span class="p">,</span><span class="mi">20</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">checkValue</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span><span class="o">||</span><span class="nx">value</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">value</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="nx">defaultVal</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">value</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)){</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">value</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)){</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)}}}</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">return</span> <span class="nx">value</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getWorkingValueFromInput</span><span class="p">(){</span><span class="k">return</span> <span class="nx">getValidValue</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">getValidValue</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span><span class="o">||</span><span class="nx">value</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">value</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">defaultVal</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">pixelsToValue</span><span class="p">(</span><span class="nx">px</span><span class="p">){</span><span class="kd">var</span> <span class="nx">val</span><span class="o">=</span><span class="nx">getValidValue</span><span class="p">(</span><span class="nx">scale</span><span class="o">?</span><span class="nx">percentToValue</span><span class="p">(</span><span class="nx">pixelsToPercent</span><span class="p">(</span><span class="nx">px</span><span class="p">))</span><span class="o">:</span><span class="nx">vertical</span><span class="o">?</span><span class="nx">max</span><span class="o">-</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">px</span><span class="o">/</span><span class="nx">stepPx</span><span class="p">)</span><span class="o">*</span><span class="nx">step</span><span class="p">)</span><span class="o">:</span><span class="nx">min</span><span class="o">+</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">px</span><span class="o">/</span><span class="nx">stepPx</span><span class="p">)</span><span class="o">*</span><span class="nx">step</span><span class="p">));</span><span class="nx">handle</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">vertical</span><span class="o">?</span><span class="s2">&quot;top&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">px</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">redrawRange</span><span class="p">();</span><span class="nx">setInputValue</span><span class="p">((</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">||</span><span class="nx">step</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">val</span><span class="p">)</span><span class="o">:</span><span class="nx">val</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">val</span><span class="p">){</span><span class="kd">var</span> <span class="nx">clearVal</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">value</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="k">typeof</span> <span class="nx">val</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">val</span><span class="p">)</span><span class="o">||</span><span class="nx">val</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">forceValue</span><span class="p">){</span><span class="nx">value</span><span class="o">=</span><span class="nx">defaultVal</span><span class="p">;</span><span class="nx">clearVal</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">value</span><span class="o">=</span><span class="nx">checkValue</span><span class="p">(</span><span class="nx">val</span><span class="p">)}</span><span class="nx">handle</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">vertical</span><span class="o">?</span><span class="s2">&quot;top&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">scale</span><span class="o">?</span><span class="nx">percentToPixels</span><span class="p">(</span><span class="nx">valueToPercent</span><span class="p">(</span><span class="nx">value</span><span class="p">))</span><span class="o">:</span><span class="nx">vertical</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(((</span><span class="nx">max</span><span class="o">-</span><span class="nx">value</span><span class="p">)</span><span class="o">/</span><span class="nx">step</span><span class="p">)</span><span class="o">*</span><span class="nx">stepPx</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(((</span><span class="nx">value</span><span class="o">-</span><span class="nx">min</span><span class="p">)</span><span class="o">/</span><span class="nx">step</span><span class="p">)</span><span class="o">*</span><span class="nx">stepPx</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">redrawRange</span><span class="p">();</span><span class="nx">setInputValue</span><span class="p">(</span><span class="nx">clearVal</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">value</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">snapToPxValue</span><span class="p">(</span><span class="nx">px</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">scale</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">rMaxPx</span><span class="p">,</span><span class="nx">px</span><span class="p">),</span><span class="nx">rMinPx</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">rem</span><span class="o">=</span><span class="nx">px</span><span class="o">%</span><span class="nx">stepPx</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rem</span><span class="o">&amp;&amp;</span><span class="nx">rem</span><span class="o">&gt;=</span><span class="p">(</span><span class="nx">stepPx</span><span class="o">/</span><span class="mi">2</span><span class="p">)){</span><span class="nx">px</span><span class="o">+=</span><span class="p">(</span><span class="nx">stepPx</span><span class="o">-</span><span class="nx">rem</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">px</span><span class="o">-=</span><span class="nx">rem</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">px</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">rMinPx</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">rMaxPx</span><span class="p">))){</span><span class="nx">px</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">rMinPx</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">rMaxPx</span><span class="p">))}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">px</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">rMinPx</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">rMaxPx</span><span class="p">))){</span><span class="nx">px</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">rMinPx</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">rMaxPx</span><span class="p">))}}</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">px</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">rMaxPx</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">percentToValue</span><span class="p">(</span><span class="nx">pct</span><span class="p">){</span><span class="kd">var</span> <span class="nx">st</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">fr</span><span class="o">=</span><span class="nx">min</span><span class="p">,</span><span class="nx">value</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span> <span class="k">in</span> <span class="nx">scale</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">scale</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">s</span><span class="p">)){</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">pct</span><span class="o">&gt;=</span><span class="nx">st</span><span class="o">&amp;&amp;</span><span class="nx">pct</span><span class="o">&lt;=+</span><span class="nx">s</span><span class="p">){</span><span class="nx">value</span><span class="o">=</span><span class="nx">fr</span><span class="o">+</span><span class="p">((</span><span class="nx">pct</span><span class="o">-</span><span class="nx">st</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="o">+</span><span class="nx">scale</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">-</span><span class="nx">fr</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="o">+</span><span class="nx">s</span><span class="o">-</span><span class="nx">st</span><span class="p">)}</span><span class="nx">st</span><span class="o">=+</span><span class="nx">s</span><span class="p">;</span><span class="nx">fr</span><span class="o">=+</span><span class="nx">scale</span><span class="p">[</span><span class="nx">s</span><span class="p">]}</span><span class="k">return</span> <span class="nx">value</span><span class="p">}</span><span class="kd">function</span> <span class="nx">valueToPercent</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="kd">var</span> <span class="nx">st</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">fr</span><span class="o">=</span><span class="nx">min</span><span class="p">,</span><span class="nx">pct</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span> <span class="k">in</span> <span class="nx">scale</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">scale</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">s</span><span class="p">)){</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">value</span><span class="o">&gt;=</span><span class="nx">fr</span><span class="o">&amp;&amp;</span><span class="nx">value</span><span class="o">&lt;=+</span><span class="nx">scale</span><span class="p">[</span><span class="nx">s</span><span class="p">]){</span><span class="nx">pct</span><span class="o">=</span><span class="nx">st</span><span class="o">+</span><span class="p">(</span><span class="nx">value</span><span class="o">-</span><span class="nx">fr</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="o">+</span><span class="nx">s</span><span class="o">-</span><span class="nx">st</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="o">+</span><span class="nx">scale</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">-</span><span class="nx">fr</span><span class="p">)}</span><span class="nx">st</span><span class="o">=+</span><span class="nx">s</span><span class="p">;</span><span class="nx">fr</span><span class="o">=+</span><span class="nx">scale</span><span class="p">[</span><span class="nx">s</span><span class="p">]}</span><span class="k">return</span> <span class="nx">pct</span><span class="p">}</span><span class="kd">function</span> <span class="nx">percentToPixels</span><span class="p">(</span><span class="nx">percent</span><span class="p">){</span><span class="k">return</span><span class="p">((</span><span class="nx">outerWrapper</span><span class="p">[</span><span class="nx">vertical</span><span class="o">?</span><span class="s2">&quot;offsetHeight&quot;</span><span class="o">:</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">]</span><span class="o">-</span><span class="nx">handle</span><span class="p">[</span><span class="nx">vertical</span><span class="o">?</span><span class="s2">&quot;offsetHeight&quot;</span><span class="o">:</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">])</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span><span class="o">*</span><span class="nx">percent</span><span class="p">}</span><span class="kd">function</span> <span class="nx">pixelsToPercent</span><span class="p">(</span><span class="nx">pixels</span><span class="p">){</span><span class="k">return</span> <span class="nx">pixels</span><span class="o">/</span><span class="p">((</span><span class="nx">outerWrapper</span><span class="p">[</span><span class="nx">vertical</span><span class="o">?</span><span class="s2">&quot;offsetHeight&quot;</span><span class="o">:</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">]</span><span class="o">-</span><span class="nx">outerWrapper</span><span class="p">[</span><span class="nx">handle</span><span class="o">?</span><span class="s2">&quot;offsetHeight&quot;</span><span class="o">:</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">])</span><span class="o">/</span><span class="mi">100</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">setInputValue</span><span class="p">(</span><span class="nx">val</span><span class="p">){</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;update&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">userSet</span><span class="p">){</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-no-value&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">,</span><span class="s2">&quot;fd-slider-no-value&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">val</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">val</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="o">===</span><span class="nx">val</span><span class="p">){</span><span class="nx">updateAriaValues</span><span class="p">();</span><span class="k">return</span><span class="p">}</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">val</span><span class="p">].</span><span class="nx">selected</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span><span class="p">){}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">val</span><span class="o">!=</span><span class="s2">&quot;&quot;</span><span class="p">){</span><span class="nx">val</span><span class="o">=</span><span class="p">(</span><span class="nx">min</span><span class="o">+</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">((</span><span class="nx">val</span><span class="o">-</span><span class="nx">min</span><span class="p">)</span><span class="o">/</span><span class="nx">step</span><span class="p">)</span><span class="o">*</span><span class="nx">step</span><span class="p">)).</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">precision</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="o">===</span><span class="nx">val</span><span class="p">){</span><span class="nx">updateAriaValues</span><span class="p">();</span><span class="k">return</span><span class="p">}</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">val</span><span class="p">}</span><span class="nx">updateAriaValues</span><span class="p">();</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;change&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">checkInputValue</span><span class="p">(</span><span class="nx">value</span><span class="p">){</span><span class="k">return</span> <span class="o">!</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span><span class="o">||</span><span class="nx">value</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="nx">value</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)</span><span class="o">||</span><span class="nx">value</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">setSliderRange</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">rMin</span><span class="o">&gt;</span><span class="nx">rMax</span><span class="p">){</span><span class="nx">newMin</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">min</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">));</span><span class="nx">newMax</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">max</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">));</span><span class="nx">rMin</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">);</span><span class="nx">rMax</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">newMin</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">min</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">));</span><span class="nx">newMax</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">max</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">));</span><span class="nx">rMin</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">);</span><span class="nx">rMax</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">defaultVal</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)){</span><span class="nx">defaultVal</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">defaultVal</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)){</span><span class="nx">defaultVal</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">rMin</span><span class="p">,</span><span class="nx">rMax</span><span class="p">)}}</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-valuemin&quot;</span><span class="p">,</span><span class="nx">rMin</span><span class="p">);</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-valuemax&quot;</span><span class="p">,</span><span class="nx">rMax</span><span class="p">);</span><span class="nx">checkValue</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">);</span><span class="nx">redraw</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">redrawRange</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">noRangeBar</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">vertical</span><span class="p">){</span><span class="nx">rangeBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">1</span><span class="p">,(</span><span class="nx">bar</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">-</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">rangeBar</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">handle</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">findLabel</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">label</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">labelList</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;label&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">lbl</span><span class="p">;</span><span class="nx">lbl</span><span class="o">=</span><span class="nx">labelList</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">lbl</span><span class="p">.</span><span class="nx">htmlFor</span><span class="o">&amp;&amp;</span><span class="nx">lbl</span><span class="p">.</span><span class="nx">htmlFor</span><span class="o">==</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">lbl</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;for&quot;</span><span class="p">)</span><span class="o">==</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">)){</span><span class="nx">label</span><span class="o">=</span><span class="nx">lbl</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">label</span><span class="o">&amp;&amp;!</span><span class="nx">label</span><span class="p">.</span><span class="nx">id</span><span class="p">){</span><span class="nx">label</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;_label&quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">label</span><span class="p">}</span><span class="kd">function</span> <span class="nx">updateAriaValues</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">val</span><span class="o">=</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">].</span><span class="nx">value</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">valTxt</span><span class="o">=</span><span class="nx">ariaFormat</span><span class="o">?</span><span class="nx">ariaFormat</span><span class="p">(</span><span class="nx">val</span><span class="p">)</span><span class="o">:</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">].</span><span class="nx">text</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">].</span><span class="nx">text</span><span class="o">:</span><span class="nx">val</span><span class="p">)</span><span class="o">:</span><span class="nx">val</span><span class="p">;</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-valuenow&quot;</span><span class="p">,</span><span class="nx">val</span><span class="p">);</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-valuetext&quot;</span><span class="p">,</span><span class="nx">valTxt</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">onInputChange</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">);</span><span class="nx">updateAriaValues</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">onReset</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="p">){</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">inp</span><span class="p">.</span><span class="nx">defaultValue</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="o">=</span><span class="nx">resetDef</span><span class="p">}</span><span class="nx">checkValue</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">].</span><span class="nx">value</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="nx">redraw</span><span class="p">();</span><span class="nx">updateAriaValues</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">valueSet</span><span class="p">(</span><span class="nx">tf</span><span class="p">){</span><span class="nx">userSet</span><span class="o">=!!</span><span class="nx">tf</span><span class="p">}</span><span class="kd">function</span> <span class="nx">setTabIndex</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="o">!</span></div><div class='line' id='LC9'><span class="cm">/*@cc_on!@*/</span></div><div class='line' id='LC10'><span class="kc">false</span><span class="o">?</span><span class="s2">&quot;tabIndex&quot;</span><span class="o">:</span><span class="s2">&quot;tabindex&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">tabIndex</span><span class="o">=</span><span class="nx">i</span><span class="p">}(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">html5Shim</span><span class="o">||</span><span class="nx">hideInput</span><span class="p">){</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;fd-form-element-hidden&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">inp</span><span class="p">,</span><span class="s2">&quot;change&quot;</span><span class="p">,</span><span class="nx">onInputChange</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">html5Shim</span><span class="p">){</span><span class="nx">inp</span><span class="p">.</span><span class="nx">stepUp</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">increment</span><span class="p">(</span><span class="nx">n</span><span class="o">||</span><span class="mi">1</span><span class="p">)};</span><span class="nx">inp</span><span class="p">.</span><span class="nx">stepDown</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">increment</span><span class="p">(</span><span class="nx">n</span><span class="o">||-</span><span class="mi">1</span><span class="p">)}}</span><span class="nx">outerWrapper</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">);</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;fd-slider&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">vertical</span><span class="o">?</span><span class="s2">&quot;-vertical &quot;</span><span class="o">:</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">classNames</span><span class="p">;</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;fd-slider-&quot;</span><span class="o">+</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">vertical</span><span class="o">&amp;&amp;</span><span class="nx">inpHeight</span><span class="p">){</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">inpHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}</span><span class="nx">innerWrapper</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">);</span><span class="nx">innerWrapper</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;fd-slider-wrapper&quot;</span><span class="o">+</span><span class="p">(</span><span class="o">!</span><span class="nx">html5Shim</span><span class="o">?</span><span class="s2">&quot; fd-slider-no-value&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">ieBlur</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">);</span><span class="nx">ieBlur</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;fd-slider-inner&quot;</span><span class="p">;</span><span class="nx">bar</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">);</span><span class="nx">bar</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;fd-slider-bar&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">fullARIA</span><span class="p">){</span><span class="nx">handle</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">handle</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="s2">&quot;#&quot;</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">stopEvent</span><span class="p">)}</span><span class="nx">setTabIndex</span><span class="p">(</span><span class="nx">handle</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">handle</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;fd-slider-handle&quot;</span><span class="p">;</span><span class="nx">handle</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="mi">160</span><span class="p">)));</span><span class="nx">innerWrapper</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">ieBlur</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">noRangeBar</span><span class="p">){</span><span class="nx">rangeBar</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">);</span><span class="nx">rangeBar</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;fd-slider-range&quot;</span><span class="p">;</span><span class="nx">innerWrapper</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">rangeBar</span><span class="p">)}</span><span class="nx">innerWrapper</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">bar</span><span class="p">);</span><span class="nx">innerWrapper</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">handle</span><span class="p">);</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">innerWrapper</span><span class="p">);</span><span class="nx">inp</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">,</span><span class="nx">inp</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">isOpera</span><span class="o">||</span></div><div class='line' id='LC11'><span class="cm">/*@cc_on!@*/</span></div><div class='line' id='LC12'><span class="o">!</span><span class="kc">true</span><span class="p">){</span><span class="nx">handle</span><span class="p">.</span><span class="nx">unselectable</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="p">;</span><span class="nx">bar</span><span class="p">.</span><span class="nx">unselectable</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="p">;</span><span class="nx">ieBlur</span><span class="p">.</span><span class="nx">unselectable</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="p">;</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">unselectable</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="p">;</span><span class="nx">innerWrapper</span><span class="p">.</span><span class="nx">unselectable</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">noRangeBar</span><span class="p">){</span><span class="nx">rangeBar</span><span class="p">.</span><span class="nx">unselectable</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="p">}}</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;role&quot;</span><span class="p">,</span><span class="s2">&quot;application&quot;</span><span class="p">);</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;role&quot;</span><span class="p">,</span><span class="s2">&quot;slider&quot;</span><span class="p">);</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-valuemin&quot;</span><span class="p">,</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">value</span><span class="o">:</span><span class="nx">min</span><span class="p">);</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-valuemax&quot;</span><span class="p">,</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;select&quot;</span><span class="o">?</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">[</span><span class="nx">inp</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">value</span><span class="o">:</span><span class="nx">max</span><span class="p">);</span><span class="kd">var</span> <span class="nx">lbl</span><span class="o">=</span><span class="nx">findLabel</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">lbl</span><span class="p">){</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-labelledby&quot;</span><span class="p">,</span><span class="nx">lbl</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="nx">handle</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;fd-slider-handle-&quot;</span><span class="o">+</span><span class="nx">inp</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span></div><div class='line' id='LC13'><span class="cm">/*@cc_on</span></div><div class='line' id='LC14'><span class="cm">                                /*@if(@_win32)</span></div><div class='line' id='LC15'><span class="cm">                                lbl.setAttribute(&quot;htmlFor&quot;, handle.id);</span></div><div class='line' id='LC16'><span class="cm">                                @else @*/</span></div><div class='line' id='LC17'><span class="nx">lbl</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;for&quot;</span><span class="p">,</span><span class="nx">handle</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span></div><div class='line' id='LC18'><span class="cm">/*@end</span></div><div class='line' id='LC19'><span class="cm">                                @*/</span></div><div class='line' id='LC20'><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">describedBy</span><span class="p">)){</span><span class="nx">handle</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;aria-describedby&quot;</span><span class="p">,</span><span class="nx">describedBy</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">)</span><span class="o">==</span><span class="kc">true</span><span class="p">){</span><span class="nx">disableSlider</span><span class="p">(</span><span class="kc">true</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">enableSlider</span><span class="p">(</span><span class="kc">true</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">varSetRules</span><span class="p">.</span><span class="nx">onvalue</span><span class="p">){</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">checkValue</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">form</span><span class="p">){</span><span class="nx">addEvent</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">form</span><span class="p">,</span><span class="s2">&quot;reset&quot;</span><span class="p">,</span><span class="nx">onReset</span><span class="p">)}</span><span class="nx">updateAriaValues</span><span class="p">();</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;create&quot;</span><span class="p">);</span><span class="nx">redraw</span><span class="p">()})();</span><span class="k">return</span><span class="p">{</span><span class="nx">onResize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">!=</span><span class="nx">sliderH</span><span class="o">||</span><span class="nx">outerWrapper</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">!=</span><span class="nx">sliderW</span><span class="p">){</span><span class="nx">redraw</span><span class="p">()}},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">destroySlider</span><span class="p">()},</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">valueToPixels</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">)},</span><span class="nx">stepUp</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">increment</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">)},</span><span class="nx">stepDown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">increment</span><span class="p">(</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">||-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">increment</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">increment</span><span class="p">(</span><span class="nx">n</span><span class="p">)},</span><span class="nx">disable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">disableSlider</span><span class="p">()},</span><span class="nx">enable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">enableSlider</span><span class="p">()},</span><span class="nx">setRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">mi</span><span class="p">,</span><span class="nx">mx</span><span class="p">){</span><span class="nx">setSliderRange</span><span class="p">(</span><span class="nx">mi</span><span class="p">,</span><span class="nx">mx</span><span class="p">)},</span><span class="nx">getValueSet</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="o">!!</span><span class="nx">userSet</span><span class="p">},</span><span class="nx">setValueSet</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">tf</span><span class="p">){</span><span class="nx">valueSet</span><span class="p">(</span><span class="nx">tf</span><span class="p">)},</span><span class="nx">checkValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">varSetRules</span><span class="p">.</span><span class="nx">onvalue</span><span class="p">){</span><span class="nx">userSet</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">checkValue</span><span class="p">(</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;input&quot;</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">inp</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">:</span><span class="nx">inp</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">)}</span><span class="nx">updateAriaValues</span><span class="p">();</span><span class="nx">redraw</span><span class="p">()}}}</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">init</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">slider</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">slider</span> <span class="k">in</span> <span class="nx">sliders</span><span class="p">){</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">slider</span><span class="p">].</span><span class="nx">checkValue</span><span class="p">()}},</span><span class="mi">0</span><span class="p">)});</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">resize</span><span class="p">);</span><span class="nx">addEvent</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;unload&quot;</span><span class="p">,</span><span class="nx">unload</span><span class="p">);(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">scriptFiles</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">),</span><span class="nx">scriptInner</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">scriptFiles</span><span class="p">[</span><span class="nx">scriptFiles</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">innerHTML</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\n\r\s\t]+/g</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s+$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">json</span><span class="o">=</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">scriptInner</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">json</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="s2">&quot;err&quot;</span> <span class="k">in</span> <span class="nx">json</span><span class="p">)){</span><span class="nx">affectJSON</span><span class="p">(</span><span class="nx">json</span><span class="p">)}})();</span></div><div class='line' id='LC21'><span class="cm">/*@cc_on</span></div><div class='line' id='LC22'><span class="cm">        @if (@_jscript_version &lt; 9)</span></div><div class='line' id='LC23'><span class="cm">        addClass(document.documentElement, &quot;oldie&quot;);</span></div><div class='line' id='LC24'><span class="cm">        @end</span></div><div class='line' id='LC25'><span class="cm">        @*/</span></div><div class='line' id='LC26'><span class="k">return</span><span class="p">{</span><span class="nx">createSlider</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">opts</span><span class="p">){</span><span class="k">return</span> <span class="nx">createSlider</span><span class="p">(</span><span class="nx">opts</span><span class="p">)},</span><span class="nx">onDomReady</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">onDomReady</span><span class="p">()},</span><span class="nx">destroyAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">destroyAllsliders</span><span class="p">()},</span><span class="nx">destroySlider</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">){</span><span class="k">return</span> <span class="nx">destroySingleSlider</span><span class="p">(</span><span class="nx">id</span><span class="p">)},</span><span class="nx">redrawAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">resize</span><span class="p">()},</span><span class="nx">addEvent</span><span class="o">:</span><span class="nx">addEvent</span><span class="p">,</span><span class="nx">removeEvent</span><span class="o">:</span><span class="nx">removeEvent</span><span class="p">,</span><span class="nx">stopEvent</span><span class="o">:</span><span class="nx">stopEvent</span><span class="p">,</span><span class="nx">increment</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span><span class="nx">numSteps</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">sliderExists</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">increment</span><span class="p">(</span><span class="nx">numSteps</span><span class="p">)},</span><span class="nx">stepUp</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">sliderExists</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">stepUp</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">)},</span><span class="nx">stepDown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">sliderExists</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">stepDown</span><span class="p">(</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">||-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">setRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">sliderExists</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">setRange</span><span class="p">(</span><span class="nx">newMin</span><span class="p">,</span><span class="nx">newMax</span><span class="p">)},</span><span class="nx">updateSlider</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">sliderExists</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">reset</span><span class="p">()},</span><span class="nx">disable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">sliderExists</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">disable</span><span class="p">()},</span><span class="nx">enable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">sliderExists</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">sliders</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">enable</span><span class="p">()},</span><span class="nx">getValueSet</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">getValueSet</span><span class="p">()},</span><span class="nx">setValueSet</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">tf</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">sliderExists</span><span class="p">(</span><span class="nx">id</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">setValueSet</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">tf</span><span class="p">)},</span><span class="nx">setGlobalVariables</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">json</span><span class="p">){</span><span class="nx">affectJSON</span><span class="p">(</span><span class="nx">json</span><span class="p">)},</span><span class="nx">removeOnload</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">removeOnLoadEvent</span><span class="p">()}}})();</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1359500886" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.06697s from fe19.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/skirov/WebDesign/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-icon mega-icon-normalscreen"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="mini-icon mini-icon-brightness"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.06745' data-host='fe19'></span>
    
  </body>
</html>

