@model LaptopListingSystem.ViewModels.FullLaptopViewModel

@{
    ViewBag.Title = string.Format("Laptop - {0} {1}", Model.Manufacturer, Model.Model);
}

<h2>Laptop System</h2>
<h3>@Model.Manufacturer @Model.Model</h3>

@* Details section *@
<div class="row-fluid">
    <div class="span4">
        <div><strong>Monitor:</strong> @Model.MonitorSize"</div>
        <div><strong>RAM:</strong> @Model.RamCapacity GB</div>
        <div><strong>Price:</strong> $@Model.Price</div>
    </div>
    <div class="span4">
        <img class="img-laptop" src="@Model.ImageUrl" alt="@Model.Manufacturer @Model.Model" />
    </div>
    <div class="span4">
        @if (Model.Weight.HasValue)
        {
            <div><strong>Weight:</strong> @Model.Weight.Value kg</div>
        }

        @if (!string.IsNullOrWhiteSpace(Model.AdditionalParts))
        {
            <div><strong>Additional parts:</strong> @Model.AdditionalParts</div>
        }

        @if (!string.IsNullOrWhiteSpace(Model.Description))
        {
            <div><strong>Description:</strong><br />@Model.Description</div>
        }
    </div>
</div>

@* Votes section - only for registered users *@
@if (this.User.Identity.IsAuthenticated)
{
    <div>
        <span>Votes: <span id="laptop-votes">@Model.VotesCount</span></span>
        @if (this.User.Identity.IsAuthenticated && ViewBag.UserCanVote)
        {
            @Ajax.ActionLink(
                "Vote",
                "Vote",
                "Laptops",
                new { id = Model.Id, area = "" },
                new AjaxOptions()
                {
                    HttpMethod = "Post",
                    OnSuccess = "onVoteSuccess",
                    UpdateTargetId = "laptop-votes",
                    InsertionMode = InsertionMode.Replace
                },
                new { id = "vote-btn", @class = "btn" })
        }
    </div>
}

@* Comments section *@
<div class="row">
    <div id="comments-container" class="span6">
        @foreach (var comment in Model.Comments)
        {
            @Html.Partial("_Comment", comment)
        }
    </div>
</div>

@* New comment section *@
@if (this.User.Identity.IsAuthenticated)
{
    <section id="new-comment-section">
        <strong>Add comment</strong>
        @using (Ajax.BeginForm(
            "Comment",
            "Laptops",
            new { area = "", id = Model.Id },
            new AjaxOptions()
            {
                OnComplete = "onCommentComplete",
                HttpMethod = "Post",
                UpdateTargetId = "comments-container",
                InsertionMode = InsertionMode.InsertAfter
            }))
        {
            <div>
                @Html.AntiForgeryToken()
                @Html.TextArea("Content")
                @Html.ValidationMessage("Content", new { @class = "text-error" })
            </div>
            <input type="submit" onclick="onSubmitComment()" class="btn" value="Submit" />
        }
    </section>
}

<script>
    $(function () {
        $("#Content").attr("placeholder", "Comment...");
    });

    function onVoteSuccess(data) {
        $("#vote-btn").hide();
    }

    function onCommentComplete(data) {
        $("#Content").val("");
    }

    function onSubmitComment() {
        var errorsContainer = $("#errors-container");
        if (errorsContainer) {
            errorsContainer.remove();
        }
    }
</script>