@model Exam.ViewModels.FullTicketViewModel

@{
    ViewBag.Title = "Add ticket";
}

<h1>Ticketing System</h1>
<h2>Add ticket</h2>

@using (Html.BeginForm("CreateTicket", "Tickets", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <div class="control-group">
            @Html.LabelFor(model => model.CategoryId, new { @class = "control-label" })
            <div class="controls">
                @(Html.Kendo().DropDownList()
                    .Name("CategoryId")
                    .BindTo((System.Collections.IEnumerable)ViewData["categories"])
                    .DataValueField("Id")
                    .DataTextField("Name"))
                @Html.ValidationMessageFor(model => model.CategoryId, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.PriorityId, new { @class = "control-label" })
            <div class="controls">
                @(Html.Kendo().DropDownList()
                    .Name("PriorityId")
                    .BindTo((System.Collections.IEnumerable)ViewData["priorities"])
                    .DataValueField("Id")
                    .DataTextField("Name"))
                @Html.ValidationMessageFor(model => model.PriorityId, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.ScreenshotUrl, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.ScreenshotUrl)
                @Html.ValidationMessageFor(model => model.ScreenshotUrl, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Add ticket" class="btn" />
        </div>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}